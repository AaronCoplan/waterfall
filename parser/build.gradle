plugins {
    id 'antlr'
}

dependencies {
    // antlr grammar dependency
    antlr 'org.antlr:antlr4:4.7.1'

    // antlr runtime dependency
    implementation 'org.antlr:antlr4-runtime:4.7.1'
}

jar {
    version = '0.0.1'
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

generateGrammarSource {
    arguments = ['-package', 'com.aaroncoplan.waterfall.generated']
    outputDirectory = file("${project.buildDir}/generated-src/main/java")
    doLast {
        copy {
            from "${project.buildDir}/generated-src/main/java"
            into "src/main/java/com/aaroncoplan/waterfall/generated"
        }
    }
}

// ensure we generate the grammar source prior
// to compiling project code
compileJava.dependsOn generateGrammarSource
compileJava {
    source = ['src/main/java']
}

// remove generated grammar source on clean
task removeGeneratedSource(type: Delete) {
    delete 'src/main/java/com/aaroncoplan/waterfall/generated'
}
clean.dependsOn removeGeneratedSource

// mark generated source as code for IntelliJ
sourceSets.main.java.srcDirs += file("src/main/java/com/aaroncoplan/waterfall/generated")
idea {
    module {
        generatedSourceDirs += file('src/main/java/com/aaroncoplan/waterfall/generated')
    }
}