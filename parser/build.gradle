buildscript {
    repositories {
        mavenCentral()        
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61"
    }
}

plugins {
    id 'antlr'
}

apply plugin: 'kotlin'

repositories {
    mavenCentral()    
}

dependencies {
    antlr 'org.antlr:antlr4:4.7.1'
    implementation 'org.antlr:antlr4-runtime:4.7.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.61"
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.3.61"
}

generateGrammarSource {
    arguments = ['-package', 'com.aaroncoplan.waterfall.parser.generated']
    outputDirectory = file("${project.buildDir}/generated-src/main/java")
    doLast {        
        copy {
            from "${project.buildDir}/generated-src/main/java"
            into "src/main/kotlin/com/aaroncoplan/waterfall/parser/generated"
        }
    }
}

compileKotlin.dependsOn generateGrammarSource

task removeGeneratedSource(type: Delete) {
    delete 'src/main/kotlin/com/aaroncoplan/waterfall/parser/generated'
}

clean.dependsOn removeGeneratedSource

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/kotlin/com/aaroncoplan/waterfall/parser/generated'
    test.kotlin.srcDirs += 'src/test/kotlin'
}

test {
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}